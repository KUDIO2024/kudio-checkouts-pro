<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Checkout Page with Flowlu Integration</title>
    <script src="https://js.stripe.com/v3/"></script>
    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
      }
      body {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        background-color: #ffffff;
        height: 100vh;
        padding: 20px;
        width: 100%;
      }
      h2 {
        font-size: 22px;
        font-weight: bold;
        margin-bottom: 3%;
      }
      p {
        font-size: 14px;
        margin: 3% 0%;
      }
      .container {
        display: flex;
        width: 100%;
        height: auto;
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        flex-wrap: wrap;
      }

      .left-column {
        flex: 1;
        margin-right: 20px;
        width: 60%;
        min-width: 300px;
      }

      .right-column {
        width: 40%;
        position: sticky;
        top: 20px;
        min-width: 300px;
      }

      .accordion-header {
        background-color: #e0ebf7;
        border-radius: 5px;
        margin-bottom: 10px;
        padding: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: bold;
        font-size: 1.1em;
        color: #333;
        cursor: pointer;
      }
      .accordion-header::after {
        content: "▼";
        font-size: 1em;
        color: #666;
        margin-left: auto;
      }
      .accordion-header.active::after {
        content: "▲";
      }
      .accordion-content {
        display: none;
        background-color: #ffffff;
        padding: 20px;
        margin-top: 10px;
        margin-bottom: 10px;
      }
      .accordion-header.active + .accordion-content {
        display: block;
      }
      .hosting-options {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        flex-direction: column;
      }
      .hosting-option {
        background-color: #f4faff;
        border-radius: 10px;
        padding: 2%;
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #545454;
        cursor: pointer;
        border: 1px solid #e8e8e8;
        width: 50%;
      }
      .hosting-option input {
        margin-right: 10px;
        transform: scale(1.2); /* Increase size - adjust as needed */
      }
      .details-form {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
      }
      .details-form input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }
      .next-btn {
        background-color: #003b44;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 5px;
        font-size: 1em;
        position: relative;
      }
      .back-btn {
        background-color: #2f5972;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 5px;
        font-size: 1em;
        position: relative;
      }
      .please-wait-spinner {
        display: none;
      }
      .please-wait-spinner.loading {
        display: flex;
        margin: auto 0%;
        gap: 3%;
        width: 50%;
      }
      .loading-spinner {
        width: 20px;
        height: 20px;
        border: 2px solid #fff;
        border-top: 2px solid #004d40;
        border-radius: 50%;
        transform: translateY(-50%);
        animation: spin 0.7s linear infinite;
      }
      #cardHolderName {
        width: 100%;
        font-size: 1em;
        padding: 1.2%;
        margin-bottom: 1%;
        border: 1px solid #ddd;
        border-radius: 5px;
      }
      #card-element {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
      }
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .agreement-text {
        font-size: 0.85em;
        color: #333;
        line-height: 1.6;
        margin-bottom: 20px;
      }
      .summary-box {
        background-color: #f4faff;
        border-radius: 5px;
        padding: 30px;
        margin-bottom: 10px;
        border: 1px solid #cfcece; /* Adds a 2px border with the color #cfcece */
      }
      .summary-title {
        font-weight: bold;
        font-size: 1.2em;
        margin-bottom: 10px;
      }
      .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        font-size: 1.2em;
      }
      .summary-total {
        font-weight: bold;
        font-size: 1.1em;
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
        border-top: 1px solid #ccc;
        padding-top: 10px;
      }
      .hosting-details {
        font-size: 0.85em;
        padding: 30px;
        background-color: #f4faff;
        border-radius: 5px;
        border: 1px solid #cfcece; /* Adds a 2px border with the color #cfcece */
      }
      .congratulation-text {
        font-size: 1.2em;
        color: #333;
        line-height: 1.6;
        margin-bottom: 10px;
      }
      #congratulation {
        width: 80%;
      }
      .input-group {
        display: flex;
        align-items: center;
        margin-bottom: 2em;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
      }
      .prefix {
        font-size: 1em;
        padding: 1em;
        background: #f0f0f0;
        border-right: 1px solid #ccc;
        width: 20%;
      }
      #domainInput {
        padding: 1em;
        font-size: 1em;
        border: 0px;
        border-radius: 5px;
        width: 50%;
      }

      #exploreButton {
        padding: 1em;
        font-size: 1em;
        background-color: #003b44;
        color: white;
        border: 0px;
        border-radius: 5px;
        cursor: pointer;
        width: 30%;
      }
      .progress-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px 0;
      }

      .progress-step {
        flex: 1;
        text-align: center;
        position: relative;
        font-weight: normal;
        color: #ccc;
      }

      .progress-step.active {
        color: #38b6ff;
      }

      .progress-step::after {
        display: none;
      }
      .results-container {
        max-width: 95%;
        margin: 0 auto;
        padding: 0;
        display: block;
      }

      .domain-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-direction: row;
        padding: 1em;
        border-bottom: 1px solid #e0e0e0;
      }

      .domain-name {
        font-size: 1em;
        flex-grow: 2;
      }

      .status {
        flex: 1;
        text-align: right;
        margin-right: 0.5em;
      }

      .available {
        color: #38b6ff;
        font-size: 0.8em;
        font-weight: normal;
      }
      .price {
        color: #333;
        font-size: 0.7em; /* Make this value smaller to reduce the font size */
        font-weight: normal;
      }

      .taken {
        color: #ff4d4d;
        font-size: 0.9em;
        font-weight: normal;
      }

      .buy-button {
        padding: 0.5em 1em;
        background-color: transparent;
        color: black;
        border: 1px solid #333;
        border-radius: 5px;
        cursor: pointer;
        font-size: 0.9em;
      }

      .buy-button:hover {
        background-color: #003b44;
        color: white;
      }

      .hidden {
        display: none;
      }

      .loader {
        border: 5px solid #f3f3f3;
        border-top: 5px solid #003b44;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
        margin: 20px auto;
      }

      .text-center {
        text-align: center;
      }

      @media (max-width: 768px) {
        .container {
          flex-direction: column;
        }
        .left-column,
        .right-column {
          width: 100%;
          margin-right: 0;
        }
        .accordion-header {
          font-size: 1.2em;
        }
        .summary-item {
          font-size: 1em;
        }
        .summary-title {
          font-size: 1.1em;
        }
        .summary-box {
          order: 1;
        }
        .hosting-option {
          padding: 2.5% 3%;
          font-size: 0.9em;
        }
        .hosting-options {
          flex-direction: column;
        }
      }

      @media (min-width: 769px) {
        .registrant-form-container {
          display: grid;
          width: 100%; /* Set width to 100% for better container fit */ /* Adjust to fit within the screen size */
          grid-template-columns: 1fr 1fr;
          align-items: start;
          gap: 10px; /* Further reduced to minimize the space between columns */ /* Reduced to minimize the space between columns */ /* Reduced to prevent a large gap between columns */
        }
      }

      @media (max-width: 768px) {
        .registrant-form-container {
          display: flex;
          flex-direction: column;
          width: 95%; /* Adjust to fit within the screen size */
          gap: 10px; /* Reduced gap for mobile view to minimize spacing */
        }
        #registrantForm input {
          width: 100%;
          padding: 5px; /* Reduce padding for mobile view */
        }
      }

      .button-group {
        margin: 3% 0%;
        display: flex;
        gap: 1%;
      }

      .email-hosting {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        width: 100%;
        margin: 0 auto;
      }

      .email-hosting-element {
        background-color: white;
        font-size: 0.9em;
        width: 32%;
        margin: auto;
        padding: 3%;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
      }

      .confirmation-container {
        max-width: 600px;
        width: 90%; /* Adjust to fit within the screen size */
        margin: 0 auto;
        padding: 2%;
        display: none;
      }

      .confirmation-box {
        border: 1px solid #ccc;
        padding: 3%;
        margin-bottom: 1%;
      }

      @media (max-width: 820px) {
        .email-hosting-element {
          flex-basis: 100%;
          margin: 3%;
          padding: 5%;
        }
      }

      @media (max-width: 500px) {
        .domain-row {
          display: block;
        }

        .inner-status {
          display: flex;
          justify-content: space-between;
        }
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <!-- Left Column -->
      <div class="left-column">
        <div id="hostingSection">
          <h2>Hosting</h2>
          <p style="font-size: 14px; margin: 3% 0%">
            Please select a hosting option for your website. Hosting is
            essential to keep your site live at all times.
          </p>

          <div class="hosting-options">
            <label class="hosting-option">
              <input
                type="radio"
                name="hosting"
                value="19"
                onclick="updateCheckout('Pro Hosting (Monthly)', 19, 'Website Development', 675)"
              />
              £19 /Per Month
            </label>
            <label class="hosting-option">
              <input
                type="radio"
                name="hosting"
                value="185"
                onclick="updateCheckout('Pro Hosting (Yearly)', 185, 'Website Development', 549)"
              />
              £185 /Per Year
            </label>
          </div>
          <div class="button-group">
            <button type="button" class="next-btn" onclick="nextSection()">
              Next
            </button>
          </div>
        </div>

        <div id="detailSection">
          <h2>Details</h2>

          <form id="checkout-form" class="details-form">
            <input
              type="text"
              name="first_name"
              placeholder="First Name"
              required
            />
            <input
              type="text"
              name="last_name"
              placeholder="Last Name"
              required
            />
            <input type="email" name="email" placeholder="Email" required />
            <input type="text" name="phone" placeholder="Phone" required />
            <input
              type="text"
              name="billing_address_line_1"
              placeholder="Address Line 1"
              required
            />
            <input
              type="text"
              name="billing_address_line_2"
              placeholder="Address Line 2"
            />
            <input
              type="text"
              name="billing_city"
              placeholder="City"
              required
            />
            <input
              type="text"
              name="billing_state"
              placeholder="State/Region"
              required
            />
            <input
              type="text"
              name="billing_zip"
              placeholder="Postal Code"
              required
            />
            <input
              type="text"
              name="billing_country"
              placeholder="Country"
              required
            />
          </form>
          <div class="button-group">
            <button type="button" class="back-btn" onclick="backSection()">
              Back
            </button>
            <button
              type="button"
              class="next-btn"
              onclick="submitFormWithLoading(this)"
            >
              Next
            </button>
            <div class="please-wait-spinner">
              <div class="loading-spinner"></div>
              <p class="please-wait" style="margin: 0%">Please Wait</p>
            </div>
          </div>
        </div>

        <div id="domainEmailSection">
          <h2>Domain & Emails</h2>
          <p>Get a new domain with business emails along with your website</p>
          <div class="input-group">
            <span class="prefix">www.</span>
            <input
              type="text"
              id="domainInput"
              placeholder="Enter domain name"
            />
            <button id="exploreButton">Explore</button>
          </div>

          <div class="progress-bar" id="progressBar">
            <div class="progress-step" id="progressDomain">Domain</div>
            <div class="progress-step" id="progressRegister">Register</div>
            <div class="progress-step" id="progressEmail">Email</div>
            <div class="progress-step" id="progressConfirm">Confirm</div>
          </div>

          <div id="loader" class="loader hidden"></div>

          <div class="results-container" id="resultsContainer"></div>

          <div id="registrantForm" class="results-container hidden">
            <h3 class="text-center" style="margin-bottom: 2%">Register</h3>
            <div class="registrant-form-container">
              <input
                type="text"
                id="firstName"
                placeholder="First Name"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="lastName"
                placeholder="Last Name"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="address"
                placeholder="Address"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="city"
                placeholder="City"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="country"
                placeholder="Country"
                value="GB"
                disabled
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="state"
                placeholder="State"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="postCode"
                placeholder="Post Code"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input type="hidden" id="countryCode" value="44" />
              <input
                type="text"
                id="phone"
                placeholder="Phone Number"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="email"
                id="email"
                placeholder="Email"
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
              <input
                type="text"
                id="accountType"
                value="personal"
                placeholder="Account Type"
                disabled
                required
                style="padding: 3%; border: 1px solid #ccc; border-radius: 4px"
              />
            </div>
            <div class="button-group">
              <button class="back-btn" onclick="backProgressBar()">Back</button>
              <button
                id="submitRegistrantButton"
                onclick="submitRegisterForm()"
                class="next-btn"
              >
                Create
              </button>
            </div>
          </div>

          <div id="emailContainer" class="confirmation-container hidden">
            <h3 class="text-center" style="margin-bottom: 0%">
              Add Business Emails
            </h3>
            <p style="padding: 1%"></p>
            <div class="email-hosting">
              <label class="email-hosting-element">
                <div>
                  <h4>Basic</h4>
                  <p style="margin: 2% 0%">1 Account</p>
                  <p style="margin: 2% 0%">2GB Storage</p>
                  <p style="margin: 2% 0%">25Mb Attachment</p>
                  <div style="display: flex; margin-top: 10%">
                    <div>
                      <input
                        type="checkbox"
                        id="basicEmail"
                        style="transform: scale(1.5); margin-right: 10px"
                      />
                    </div>
                    <div>
                      <p style="color: #38b6ff; margin: 0; font-weight: bold">
                        £19.20<span style="font-size: 0.8em; color: black">
                          /per year</span
                        >
                      </p>
                    </div>
                  </div>
                </div>
              </label>
              <label class="email-hosting-element">
                <div>
                  <h4>Standard</h4>
                  <p style="margin: 2% 0%">10 Accounts</p>
                  <p style="margin: 2% 0%">2GB Storage</p>
                  <p style="margin: 2% 0%">25Mb Attachment</p>
                  <div style="display: flex; margin-top: 10%">
                    <div>
                      <input
                        type="checkbox"
                        id="standardEmail"
                        style="transform: scale(1.5); margin-right: 10px"
                      />
                    </div>
                    <div>
                      <p style="color: #38b6ff; margin: 0; font-weight: bold">
                        £43.20<span style="font-size: 0.8em; color: black">
                          /per year</span
                        >
                      </p>
                    </div>
                  </div>
                </div>
              </label>
              <label class="email-hosting-element">
                <div>
                  <h4>Business</h4>
                  <p style="margin: 2% 0%">Unlimited Accounts</p>
                  <p style="margin: 2% 0%">2GB Storage</p>
                  <p style="margin: 2% 0%">25Mb Attachment</p>
                  <div style="display: flex; margin-top: 10%">
                    <div>
                      <input
                        type="checkbox"
                        id="businessEmail"
                        style="transform: scale(1.5); margin-right: 10px"
                      />
                    </div>
                    <div>
                      <p style="color: #38b6ff; margin: 0; font-weight: bold">
                        £69.99<span style="font-size: 0.8em; color: black">
                          /per year</span
                        >
                      </p>
                    </div>
                  </div>
                </div>
              </label>
            </div>
            <div class="button-group">
              <button class="back-btn" onclick="backRegister()">Back</button>
              <button onclick="showConfirmation()" class="next-btn">
                Skip/Continue
              </button>
            </div>
          </div>

          <div id="confirmationContainer" class="confirmation-container">
            <h3>Confirmation</h3>
            <div class="confirmation-box" id="domainConfirmation">
              <strong>Domain Confirmation</strong><br />
              Domain: www.' + selectedDomainName + '<br />Price: £' +
              selectedDomainPrice + ' Per Year<br />
              Auto Renew
            </div>
            <div class="confirmation-box" id="accountCreated">
              <strong>Account Created</strong><br />
              Customer ID: M12097302<br />
              Username: Smith9876<br />
              Name: Sample Smith
            </div>

            <div class="button-group">
              <button class="back-btn" onclick="backProgressEmail()">
                Back
              </button>
              <button id="domainConfirm" class="next-btn">Confirm</button>
            </div>
          </div>

          <div class="button-group" id="skip-next">
            <button type="button" class="back-btn" onclick="backSection()">
              Back
            </button>
            <button type="button" class="next-btn" onclick="nextSection()">
              Skip/Next
            </button>
          </div>
        </div>

        <div id="agreementSection">
          <h2>Agreement</h2>
          <p class="agreement-text">
            At KUDIO Digital Agency, we take pride in delivering fully
            functional, high-quality websites. We are committed to ensuring that
            each website is thoroughly tested and optimised to meet your
            business needs before going live. However, once the website is
            handed over, KUDIO Digital Agency cannot be held responsible for any
            changes made by the client or third parties that may affect its
            functionality or content. This includes any accidental deletions or
            modifications.
            <br /><br />
            Clients are responsible for keeping their billing information up to
            date to avoid any disruption in hosting services. Failure to meet
            payment deadlines will result in service suspension. Please note,
            KUDIO Digital Agency has the right to add a late payment fee of £10
            to your outstanding payment for the month period. Please be aware
            that you will incur a late fee on each month's outstanding payment.
            <br /><br />
            Please read full T&C's
            <a href="https://kudio.co.uk/terms-conditions" target="_blank"
              >here</a
            >.
          </p>
          <div class="button-group">
            <button type="button" class="back-btn" onclick="backSection()">
              Back
            </button>
            <button
              type="button"
              class="next-btn"
              onclick="nextSectionPayment(this)"
            >
              Next
            </button>
          </div>
        </div>

        <div id="paymentSection">
          <h2>Payment</h2>
          <p id="total-payment"></p>
          <div class="form-group">
            <input
              type="text"
              id="cardHolderName"
              class="stripe-input"
              placeholder="Card Holder Name"
              required
            />
          </div>
          <div class="form-group">
            <div id="card-element" class="stripe-input"></div>
          </div>
          <div class="button-group">
            <button type="button" class="back-btn" onclick="backSection()">
              Back
            </button>
            <button class="next-btn" id="payment-button">Pay</button>
            <div class="please-wait-spinner">
              <div class="loading-spinner"></div>
              <p class="please-wait" style="margin: 0%">Please Wait</p>
            </div>
          </div>
        </div>

        <div id="confirmationSection">
          <h2>Confirmation</h2>
          <img
            src="https://content.app-sources.com/s/8613960789574305/uploads/2024/confirmation_icon_-0824961.png?format=webp"
            alt="Confirmation Icon"
            style="width: 3em"
          />
          <p class="congratulation-text">
            Thank you! Your project has been received and paid. A project
            manager will be in touch shortly, keep an eye on your emails
          </p>
          <p class="congratulation-text" id="project-domain"></p>
          <button class="next-btn" id="whatsapp-button" style="margin-top: 1%">
            <a
              href="https://api.whatsapp.com/message/QFIAYJTGIQOHP1?autoload=1&app_absent=0"
              target="_blank"
              style="text-decoration: none; color: white"
            >
              Send WhatsApp Message
            </a>
          </button>
        </div>

        <!-- <div class="button-group">
          <button class="next-btn" onclick="modifyUserDescription()">
            Test
          </button>
        </div> -->
      </div>

      <!-- Right Column (Fixed) -->
      <div class="right-column">
        <div class="summary-box">
          <div class="summary-title">Your Checkout</div>
          <div id="summary-items">
            <!-- Dynamic summary items go here -->
          </div>
          <div id="domain-email">
            <!-- Dynamic summary items go here -->
          </div>
          <div class="summary-total">
            <span>Today's Grand Total</span>
            <span id="grand-total">£0.00</span>
          </div>
        </div>
        <div class="hosting-details">
          <strong>Subscription / Hosting Details</strong><br />
          In next cycle, you'll be charged the selected amount and from that
          date, you'll continue to be charged that amount each subsequent period
          for as long as your subscription stays active.
        </div>
      </div>
    </div>

    <script>
      const stripePublicKey = "<%= stripePublicKey %>";
      const stripe = Stripe(stripePublicKey);

      const elements = stripe.elements();
      const cardElement = elements.create("card");
      cardElement.mount("#card-element");

      let grandTotal = 0;
      let customerName = "";
      let cliendId = 0;
      let projectId = 0;
      let selectedDomainName = "";
      let selectedDomainPrice = 0;
      let selectedEmailPrice = 0;
      let selectedEmailPlan = 0;
      let customerData = {};
      let isRegistered = 0;
      let customerID = 0;
      let username = "";
      let gDevPrice = 0;
      let gHostingPrice = 0;

      const basicEmailCheckbox = document.getElementById("basicEmail");
      const standardEmailCheckbox = document.getElementById("standardEmail");
      const businessEmailCheckbox = document.getElementById("businessEmail");

      async function modifyUserDescription() {
        try {
          const response = await fetch("/api/modify-client", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          });
          if (response.status) return true;
        } catch (error) {
          console.error("Error:", error);
          return false;
        }
      }

      function nextSectionPayment() {
        nextSection();
        document.getElementById("total-payment").innerText =
          "Total Payment £" + `${grandTotal.toFixed(2)}`;
      }

      document
        .getElementById("domainConfirm")
        .addEventListener("click", (e) => {
          nextSection(e.target);
          const summaryItems = document.getElementById("domain-email");
          let selectedEmailPlanString = "";
          switch (selectedEmailPlan) {
            case 47:
              selectedEmailPlanString = "Basic Email";
              break;
            case 48:
              selectedEmailPlanString = "Standard Email";
              break;
            case 49:
              selectedEmailPlanString = "Business Email";
              break;
          }
          selectedEmailPrice = selectedEmailPrice.toFixed(2);
          let items = [];

          if (selectedDomainPrice != 0) {
            items.push(`
              <div class="summary-item">
                <span>www.${selectedDomainName}</span>
                <span>£${selectedDomainPrice}</span>
              </div>`);
          }

          if (selectedEmailPrice != 0) {
            items.push(`
              <div class="summary-item">
                <span>${selectedEmailPlanString}</span>
                <span>£${selectedEmailPrice}</span>
              </div>`);
          }

          summaryItems.innerHTML = items.join("");

          grandTotal =
            parseFloat(selectedDomainPrice) +
            parseFloat(selectedEmailPrice) +
            parseFloat(gHostingPrice) +
            parseFloat(gDevPrice);
          document.getElementById(
            "grand-total"
          ).innerText = `£${grandTotal.toFixed(2)}`;
          document.getElementById("payment-button").innerText =
            "Pay £" + grandTotal.toFixed(2);
        });

      basicEmailCheckbox.addEventListener("change", function () {
        if (this.checked) {
          standardEmailCheckbox.checked = false;
          businessEmailCheckbox.checked = false;
          selectedEmailPrice = 19.2;
          selectedEmailPlan = 47;
        } else {
          selectedEmailPlan = 0;
          selectedEmailPrice = 0;
        }
      });

      standardEmailCheckbox.addEventListener("change", function () {
        if (this.checked) {
          basicEmailCheckbox.checked = false;
          businessEmailCheckbox.checked = false;
          selectedEmailPrice = 43.2;
          selectedEmailPlan = 48;
        } else {
          selectedEmailPlan = 0;
          selectedEmailPrice = 0;
        }
      });

      businessEmailCheckbox.addEventListener("change", function () {
        if (this.checked) {
          basicEmailCheckbox.checked = false;
          standardEmailCheckbox.checked = false;
          selectedEmailPrice = 69.99;
          selectedEmailPlan = 49;
        } else {
          selectedEmailPrice = 0;
          selectedEmailPlan = 0;
        }
      });

      window.showConfirmation = function () {
        setProgressBarStep("Confirm");
        hideContainer("emailContainer");

        showContainer("confirmationContainer");

        // Set confirmation details
        document.getElementById("domainConfirmation").innerHTML = `
                <strong>Domain Confirmation</strong><br>
                Domain: www.${selectedDomainName}<br>
                Price: £${selectedDomainPrice} Per Year<br>
                Auto Renew`;
        document.getElementById("accountCreated").innerHTML = `
                <strong>Account Created</strong><br>
                Customer ID: ${customerID}<br>
                Username: ${username}<br>
                Name: ${document.getElementById("firstName").value} ${
          document.getElementById("lastName").value
        }`;
        console.log("seleted email price type: ", typeof selectedEmailPrice);
        console.log("seleted domain price type: ", typeof selectedDomainPrice);
      };

      function showLoader() {
        const loader = document.getElementById("loader");
        loader.classList.remove("hidden");
      }

      function hideLoader() {
        const loader = document.getElementById("loader");
        loader.classList.add("hidden");
      }

      function fillCustomerData(customerData) {
        document.querySelector(
          '.registrant-form-container input[id="firstName"]'
        ).value = customerData.first_name ? customerData.first_name : "";
        document.querySelector(
          '.registrant-form-container input[id="lastName"]'
        ).value = customerData.last_name ? customerData.last_name : "";
        document.querySelector(
          '.registrant-form-container input[id="email"]'
        ).value = customerData.email ? customerData.email : "";
        document.querySelector(
          '.registrant-form-container input[id="phone"]'
        ).value = customerData.phone ? customerData.phone : "";
        document.querySelector(
          '.registrant-form-container input[id="address"]'
        ).value = customerData.billing_address_line_1
          ? customerData.billing_address_line_1
          : "";
        document.querySelector(
          '.registrant-form-container input[id="city"]'
        ).value = customerData.billing_city ? customerData.billing_city : "";
        document.querySelector(
          '.registrant-form-container input[id="state"]'
        ).value = customerData.billing_state ? customerData.billing_state : "";
        document.querySelector(
          '.registrant-form-container input[id="postCode"]'
        ).value = customerData.billing_zip ? customerData.billing_zip : "";
      }

      async function createInvoice(status_id) {
        try {
          const response = await fetch("/api/create-invoice", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ status_id }),
          });
        } catch (error) {
          console.error("Error:", error);
          alert("An error occurred while fetching the invoice list.");
        }
      }

      function setProgressBarStep(step) {
        const steps = ["Domain", "Register", "Email", "Confirm"];
        steps.forEach(function (currentStep) {
          const element = document.getElementById(`progress${currentStep}`);
          if (currentStep === step) {
            element.classList.add("active");
          } else {
            element.classList.remove("active");
          }
        });
      }

      document
        .getElementById("exploreButton")
        .addEventListener("click", async () => {
          setProgressBarStep("Domain");
          const domain = document
            .getElementById("domainInput")
            .value.trim()
            .toLowerCase();
          const resultsContainer = document.getElementById("resultsContainer");

          if (!domain) {
            resultsContainer.innerHTML =
              "<h3 class='text-center'>Search Results</h3><p>Please enter a domain name.</p>";
            resultsContainer.style.display = "block";
            return;
          }

          // Clear previous results
          resultsContainer.style.display = "none";
          resultsContainer.innerHTML =
            "<h3 class='text-center'>Search Results</h3>";

          // Show loader
          showLoader();

          try {
            console.log("Sending request to check domain availability...");
            const response = await fetch(
              `/domain-availability?domain=${encodeURIComponent(domain)}`
            );

            console.log("Response received:", response);

            if (!response.ok) {
              console.error("Response status not ok:", response.status);
              throw new Error("Network response was not ok");
            }

            const data = await response.json();
            console.log("Response data:", data);

            // Hide loader
            hideLoader();

            if (data.error) {
              resultsContainer.innerHTML += `<p>${data.error}</p>`;
              resultsContainer.style.display = "block";
              return;
            }

            if (!data.data || data.data.length === 0) {
              resultsContainer.innerHTML +=
                "<p>No domains available or invalid domain name.</p>";
              resultsContainer.style.display = "block";
              return;
            }

            // Display results container
            resultsContainer.style.display = "block";

            // Display the domain results
            data.data.forEach((domainItem) => {
              const vat = (domainItem.register_price * 20) / 100;
              const priceWithTax = domainItem.register_price + vat;
              const finalPrice = ((priceWithTax * 280) / 100).toFixed(2);

              const domainRow = document.createElement("div");
              domainRow.classList.add("domain-row");
              domainRow.id = `domainRow-${domainItem.domain_name}`;

              const domainNameDiv = document.createElement("div");
              domainNameDiv.classList.add("domain-name");
              domainNameDiv.innerHTML = `www.${domainItem.domain_name}`;
              domainRow.appendChild(domainNameDiv);

              const statusDiv = document.createElement("div");
              statusDiv.classList.add("status");

              if (domainItem.is_available) {
                statusDiv.innerHTML = `
                                        <div class="available">Available</div>
                                        <div class="price">&pound;${finalPrice} / Per Year</div>
                                    `;
                const buyButton = document.createElement("button");
                buyButton.classList.add("buy-button");
                buyButton.innerHTML = "Register";
                buyButton.onclick = () => {
                  showRegistrantForm(domainItem.domain_name, finalPrice);
                  console.log("this is customer data: \n", customerData);
                  fillCustomerData(customerData);
                  // displaySelectedDomain(domainItem.domain_name);
                };

                const innerStatusDiv = document.createElement("div");
                innerStatusDiv.classList.add("inner-status");
                innerStatusDiv.appendChild(statusDiv);
                innerStatusDiv.appendChild(buyButton);

                domainRow.appendChild(innerStatusDiv);
              } else {
                statusDiv.innerHTML = `<div class="taken">Taken</div>`;
                domainRow.appendChild(statusDiv);
              }

              resultsContainer.appendChild(domainRow);
            });
            const buttonGroup = document.createElement("div");
            buttonGroup.classList.add("button-group");
            buttonGroup.innerHTML = `
                <button class="back-btn" onclick="backSection()">Back</button>
                <button class="next-btn" onclick="nextSection()">Skip/Next</button>
            `;
            // document.getElementById("skip-next").style.display = "none";
            // resultsContainer.appendChild(buttonGroup);
          } catch (error) {
            console.error("Error fetching domain availability:", error);
            resultsContainer.innerHTML += `<p>Error fetching domain availability: ${error.message}</p>`;
            resultsContainer.style.display = "block";

            // Hide loader
            loader.classList.add("hidden");
          }
        });

      function validateForm() {
        const requiredFields = [
          "firstName",
          "lastName",
          "address",
          "city",
          "state",
          "postCode",
          "country",
          "phone",
          "email",
        ];

        requiredFields.forEach((fieldId) => {
          const field = document.querySelector(
            `.registrant-form-container input[id="${fieldId}"]`
          ).value;
          console.log(field);
          if (field.trim() === "") {
            return false;
          }
        });

        return true;
      }

      let isRegisteredDomain = false;

      window.submitRegisterForm = async function () {
        if (!validateForm()) {
          alert("Please fill in all required fields.");
          return;
        } else {
          if (isRegisteredDomain) {
            showEmailHosting();
            return;
          }
          console.log("Submitting registrant form...");
          const first_name = document.querySelector(
            '.registrant-form-container input[id="firstName"]'
          ).value;
          const last_name = document.querySelector(
            '.registrant-form-container input[id="lastName"]'
          ).value;
          const address = document.querySelector(
            '.registrant-form-container input[id="address"]'
          ).value;
          const city = document.querySelector(
            '.registrant-form-container input[id="city"]'
          ).value;
          const state = document.querySelector(
            '.registrant-form-container input[id="state"]'
          ).value;
          const post_code = document.querySelector(
            '.registrant-form-container input[id="postCode"]'
          ).value;
          const country = document.querySelector(
            '.registrant-form-container input[id="country"]'
          ).value;
          const phone = document.querySelector(
            '.registrant-form-container input[id="phone"]'
          ).value;
          const email = document.querySelector(
            '.registrant-form-container input[id="email"]'
          ).value;
          const country_code = 44;
          const account_type = "personal";

          const data = {
            first_name,
            last_name,
            address,
            city,
            state,
            post_code,
            country,
            country_code,
            phone,
            email,
            account_type,
          };

          console.log("customer data to submit: " + data);

          await fetch("/registrant", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => {
              result = response.json();
              if (!response.ok) {
                return;
              }
              return result;
            })
            .then((result) => {
              if (result.status) {
                customerID = result.customer;
                username =
                  first_name +
                  last_name +
                  Math.floor(1000 + Math.random() * 9000).toString();
                isRegisteredDomain = true;

                showEmailHosting();
              } else {
                alert(
                  "Failed to register customer. Please fill all fields and check the information once again."
                );
              }
            });
        }
      };

      function showEmailHosting() {
        setProgressBarStep("Email");
        hideContainer("registrantForm");

        showContainer("emailContainer");
      }

      function backProgressBar() {
        setProgressBarStep("Domain");
        document.getElementById("skip-next").style.display = "block";
        hideContainer("registrantForm");
        showContainer("resultsContainer");
      }

      function backRegister() {
        setProgressBarStep("Register");
        // document.getElementById("skip-next").style.display = "block";
        hideContainer("emailContainer");
        showContainer("registrantForm");
      }

      function backProgressEmail() {
        setProgressBarStep("Email");
        // document.getElementById("skip-next").style.display = "block";
        hideContainer("confirmationContainer");
        showContainer("emailContainer");
      }

      window.showRegistrantForm = function (domainName, domainPrice) {
        selectedDomainName = domainName;
        selectedDomainPrice = domainPrice;
        setProgressBarStep("Register");
        console.log("Showing registrant form for domain:", domainName);
        document.getElementById("skip-next").style.display = "none";

        hideContainer("resultsContainer");
        showContainer("registrantForm");
      };

      document
        .getElementById("payment-button")
        .addEventListener("click", async () => {
          const button = document.getElementById("payment-button");
          const please = document.querySelectorAll(".please-wait-spinner")[1];
          please.classList.add("loading");

          const { paymentMethod, error } = await stripe.createPaymentMethod({
            type: "card",
            card: cardElement,
            billing_details: { name: cardHolderName },
          });

          if (error) {
            alert(error.message);
            please.classList.remove("loading");
            return;
          }

          const totalPrice = parseFloat(grandTotal).toFixed(2);
          // const totalPrice = 1;

          if (!totalPrice) {
            alert("Please choose your hosting option.");
            please.classList.remove("loading");
            return;
          }

          if (!isRegistered) {
            alert("Please register your details");
            please.classList.remove("loading");
            return;
          }

          try {
            const response = await fetch("/api/process-payment", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                paymentMethod,
                totalPrice,
                selectedDomainPrice,
                selectedEmailPrice,
                gHostingPrice,
                gDevPrice,
              }),
            });

            const { clientSecret, payment_succeed, error } =
              await response.json();
            console.log(
              "received client secret:",
              clientSecret,
              payment_succeed,
              error
            );

            if (error) {
              please.classList.remove("loading");
              alert("Error creating payment intent");
              return;
            } else if (payment_succeed) {
              const modifyUserResult = await modifyUserDescription();
              console.log(modifyUserResult);

              if (selectedDomainName === "" && selectedEmailPlan === 0) {
                please.classList.remove("loading");
                nextSection(button);
                return;
              }

              const response = await fetch(`/register-domain`, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  domain: selectedDomainName,
                  customer_id: customerID,
                  plan_id: selectedEmailPlan,
                }),
              });

              const result = await response.json();

              console.log("register domain status: ", result);

              if (result.status) {
                please.classList.remove("loading");
                nextSection(button);
                document.getElementById("project-domain").innerHTML =
                  "Project Name: " + "www" + selectedDomainName;
                // alert("Registration of domain and email hosting succeeded.");
              } else {
                please.classList.remove("loading");
                alert("Domain registration failed: " + result.error);
              }
            } else if (clientSecret) {
              const { error, paymentIntent } = await stripe.confirmCardPayment(
                clientSecret,
                {
                  payment_method: {
                    card: cardElement,
                    billing_details: {
                      name: document.getElementById("cardHolderName").value,
                    },
                  },
                }
              );

              if (error) {
                please.classList.remove("loading");
                alert("Payment failed.", error.message);
                return;
              } else if (paymentIntent.status === "succeeded") {
                console.log("Payment succeeded!\n", paymentIntent);

                const modifyUserResult = await modifyUserDescription();
                console.log(modifyUserResult);

                if (selectedDomainName === "" && selectedEmailPlan === 0) {
                  please.classList.remove("loading");
                  nextSection(button);
                  return;
                }

                const response = await fetch(`/register-domain`, {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({
                    domain: selectedDomainName,
                    customer_id: customerID,
                    plan_id: selectedEmailPlan,
                  }),
                });

                const result = await response.json();

                console.log(result);

                if (result.status) {
                  please.classList.remove("loading");
                  nextSection(button);
                  document.getElementById("project-domain").innerHTML =
                    "Project Name: " + "www" + selectedDomainName;
                  // alert("Registration of domain and email hosting succeeded.");
                } else {
                  please.classList.remove("loading");
                  alert("Domain registration failed: " + result.error);
                }
                // createInvoice((status_id = 40));
              }
            }
          } catch (error) {
            console.error("Error:", error);
            alert("An error occurred while processing the payment.");
            please.classList.remove("loading");
          }
        });

      function toggleAccordion(header) {
        const activeClass = "active";
        const content = header.nextElementSibling;
        header.classList.toggle(activeClass);
        content.classList.toggle("show");
      }

      async function submitFormWithLoading(button) {
        const please = document.querySelector(".please-wait-spinner");
        please.classList.add("loading"); // Show loading spinner

        if (!grandTotal) {
          alert("Please choose your hosting option.");
          please.classList.remove("loading");
          return;
        }

        if (isRegistered) {
          nextSection();
          please.classList.remove("loading");
          return;
        }

        // Capture form data
        const clientData = {
          first_name: document.querySelector('input[name="first_name"]').value,
          last_name: document.querySelector('input[name="last_name"]').value,
          email: document.querySelector('input[name="email"]').value,
          phone: document.querySelector('input[name="phone"]').value,
          billing_country: document.querySelector(
            'input[name="billing_country"]'
          ).value,
          billing_state: document.querySelector('input[name="billing_state"]')
            .value,
          billing_city: document.querySelector('input[name="billing_city"]')
            .value,
          billing_zip: document.querySelector('input[name="billing_zip"]')
            .value,
          billing_address_line_1: document.querySelector(
            'input[name="billing_address_line_1"]'
          ).value,
          billing_address_line_2: document.querySelector(
            'input[name="billing_address_line_2"]'
          ).value,
        };

        customerData = clientData;

        const totalData = { grandTotal };
        const formData = { ...clientData, ...totalData };
        console.log("Submitting form with loading:", formData);
        customerName = clientData.first_name + " " + clientData.last_name;

        // Send data to backend to create a client
        try {
          const response = await fetch("/api/create-client", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          });

          const result = await response.json();
          clientId = result.cliendId;
          projectId = result.projectId;
          console.log("Received result:", result);
          please.classList.remove("loading");

          if (response.ok) {
            isRegistered = 1;
            nextSection(button);
          } else {
            alert("Failed to create client in Flowlu.");
          }
        } catch (error) {
          // console.error("Error:", error);
          alert("An error occurred while creating the client.");
          please.classList.remove("loading"); // Hide loading spinner on error
        }
      }

      let currentIndex = 0;
      let sections = Array.from(document.querySelectorAll('[id$="Section"]'));
      console.log(sections);
      function showSection(index) {
        sections.forEach((section) => (section.style.display = "none"));
        sections[index].style.display = "block";
      }

      function nextSection() {
        if (currentIndex < sections.length - 1) {
          currentIndex++;
          console.log(currentIndex);
          showSection(currentIndex);
        }
      }

      function backSection() {
        if (currentIndex > 0) {
          currentIndex--;
          showSection(currentIndex);
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        showSection(currentIndex);
      });

      function updateCheckout(hostingName, hostingPrice, devName, devPrice) {
        gHostingPrice = hostingPrice;
        gDevPrice = devPrice;
        const summaryItems = document.getElementById("summary-items");
        summaryItems.innerHTML = `
                            <div class="summary-item">
                                <span>${hostingName}</span>
                                <span>£${hostingPrice}</span>
                            </div>
                            <div class="summary-item">
                                <span>${devName}</span>
                                <span>£${devPrice}</span>
                            </div>
                        `;
        grandTotal =
          parseFloat(selectedDomainPrice) +
          parseFloat(selectedEmailPrice) +
          parseFloat(gHostingPrice) +
          parseFloat(gDevPrice);
        document.getElementById(
          "grand-total"
        ).innerText = `£${grandTotal.toFixed(2)}`;
        document.getElementById("payment-button").innerText =
          "Pay £" + grandTotal.toFixed(2);
      }

      function showContainer(id) {
        const container = document.getElementById(id);
        container.style.display = "block";
        // successNotification.scrollIntoView({ behavior: "smooth" });
      }

      function hideContainer(id) {
        const container = document.getElementById(id);
        container.style.display = "none";
      }
    </script>
  </body>
</html>
